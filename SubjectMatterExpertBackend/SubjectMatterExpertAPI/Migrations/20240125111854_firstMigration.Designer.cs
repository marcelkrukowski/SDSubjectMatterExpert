// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubjectMatterExpertAPI.Data;

#nullable disable

namespace SubjectMatterExpertAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240125111854_firstMigration")]
    partial class firstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.AgileCoach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaOfExpertise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AgileCoaches");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.Colleague", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.ToTable("Colleagues");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.SME", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgileCoachId")
                        .HasColumnType("int");

                    b.Property<string>("AreaOfExpertise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AgileCoachId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("SMEs");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgileCoachId")
                        .HasColumnType("int");

                    b.Property<int>("SMEId")
                        .HasColumnType("int");

                    b.Property<string>("SubTopic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgileCoachId");

                    b.HasIndex("SMEId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgileCoachId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AvailableDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SMEId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgileCoachId");

                    b.HasIndex("SMEId");

                    b.ToTable("TimeSlots");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgileCoachId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("SMEId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgileCoachId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.AgileCoach", b =>
                {
                    b.HasOne("SubjectMatterExpertAPI.Models.User", "User")
                        .WithOne()
                        .HasForeignKey("SubjectMatterExpertAPI.Models.AgileCoach", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.Colleague", b =>
                {
                    b.HasOne("SubjectMatterExpertAPI.Models.Session", "Session")
                        .WithMany("Colleagues")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Session");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.SME", b =>
                {
                    b.HasOne("SubjectMatterExpertAPI.Models.AgileCoach", "AgileCoach")
                        .WithMany("ManagedSMEs")
                        .HasForeignKey("AgileCoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SubjectMatterExpertAPI.Models.User", "User")
                        .WithOne("SME")
                        .HasForeignKey("SubjectMatterExpertAPI.Models.SME", "UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgileCoach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.Session", b =>
                {
                    b.HasOne("SubjectMatterExpertAPI.Models.AgileCoach", "AgileCoach")
                        .WithMany("Sessions")
                        .HasForeignKey("AgileCoachId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SubjectMatterExpertAPI.Models.SME", "SME")
                        .WithMany("Sessions")
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgileCoach");

                    b.Navigation("SME");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.TimeSlot", b =>
                {
                    b.HasOne("SubjectMatterExpertAPI.Models.AgileCoach", "AgileCoach")
                        .WithMany("TimeSlots")
                        .HasForeignKey("AgileCoachId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SubjectMatterExpertAPI.Models.SME", "SME")
                        .WithMany("TimeSlots")
                        .HasForeignKey("SMEId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AgileCoach");

                    b.Navigation("SME");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.User", b =>
                {
                    b.HasOne("SubjectMatterExpertAPI.Models.AgileCoach", "AgileCoach")
                        .WithMany("ManagedUsers")
                        .HasForeignKey("AgileCoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgileCoach");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.AgileCoach", b =>
                {
                    b.Navigation("ManagedSMEs");

                    b.Navigation("ManagedUsers");

                    b.Navigation("Sessions");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.SME", b =>
                {
                    b.Navigation("Sessions");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.Session", b =>
                {
                    b.Navigation("Colleagues");
                });

            modelBuilder.Entity("SubjectMatterExpertAPI.Models.User", b =>
                {
                    b.Navigation("SME")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
